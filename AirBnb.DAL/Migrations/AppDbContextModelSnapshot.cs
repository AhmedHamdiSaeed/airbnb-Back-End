// <auto-generated />
using System;
using AirBnb.DAL.Data.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirBnb.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("propertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("propertyId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Large outdoor pool",
                            Name = "Swimming Pool",
                            propertyId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fully equipped fitness center",
                            Name = "Gym",
                            propertyId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "High-speed wireless internet",
                            Name = "WiFi",
                            propertyId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Secure parking area",
                            Name = "Parking",
                            propertyId = 1
                        },
                        new
                        {
                            Id = 21,
                            Description = "Large outdoor pool",
                            Name = "Swimming Pool",
                            propertyId = 2
                        },
                        new
                        {
                            Id = 22,
                            Description = "Fully equipped fitness center",
                            Name = "Gym",
                            propertyId = 2
                        },
                        new
                        {
                            Id = 23,
                            Description = "High-speed wireless internet",
                            Name = "WiFi",
                            propertyId = 2
                        },
                        new
                        {
                            Id = 24,
                            Description = "Secure parking area",
                            Name = "Parking",
                            propertyId = 2
                        },
                        new
                        {
                            Id = 31,
                            Description = "Large outdoor pool",
                            Name = "Swimming Pool",
                            propertyId = 3
                        },
                        new
                        {
                            Id = 32,
                            Description = "Fully equipped fitness center",
                            Name = "Gym",
                            propertyId = 3
                        },
                        new
                        {
                            Id = 33,
                            Description = "High-speed wireless internet",
                            Name = "WiFi",
                            propertyId = 3
                        },
                        new
                        {
                            Id = 34,
                            Description = "Secure parking area",
                            Name = "Parking",
                            propertyId = 3
                        },
                        new
                        {
                            Id = 25,
                            Description = "Large outdoor pool",
                            Name = "Swimming Pool",
                            propertyId = 4
                        },
                        new
                        {
                            Id = 26,
                            Description = "Fully equipped fitness center",
                            Name = "Gym",
                            propertyId = 4
                        },
                        new
                        {
                            Id = 27,
                            Description = "High-speed wireless internet",
                            Name = "WiFi",
                            propertyId = 4
                        },
                        new
                        {
                            Id = 28,
                            Description = "Secure parking area",
                            Name = "Parking",
                            propertyId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Central air conditioning system",
                            Name = "Air Conditioning",
                            propertyId = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "Central heating system",
                            Name = "Heating",
                            propertyId = 5
                        },
                        new
                        {
                            Id = 7,
                            Description = "Private balcony with a view",
                            Name = "Balcony",
                            propertyId = 5
                        },
                        new
                        {
                            Id = 8,
                            Description = "Allows pets",
                            Name = "Pet Friendly",
                            propertyId = 5
                        },
                        new
                        {
                            Id = 9,
                            Description = "Full-service spa",
                            Name = "Spa",
                            propertyId = 6
                        },
                        new
                        {
                            Id = 10,
                            Description = "Fully equipped kitchen",
                            Name = "Kitchen",
                            propertyId = 6
                        },
                        new
                        {
                            Id = 11,
                            Description = "In-unit washer and dryer",
                            Name = "Laundry",
                            propertyId = 6
                        },
                        new
                        {
                            Id = 12,
                            Description = "Elevator access",
                            Name = "Elevator",
                            propertyId = 6
                        },
                        new
                        {
                            Id = 13,
                            Description = "Wood-burning fireplace",
                            Name = "Fireplace",
                            propertyId = 7
                        },
                        new
                        {
                            Id = 14,
                            Description = "Outdoor BBQ area",
                            Name = "BBQ Area",
                            propertyId = 7
                        },
                        new
                        {
                            Id = 15,
                            Description = "Private hot tub",
                            Name = "Hot Tub",
                            propertyId = 7
                        },
                        new
                        {
                            Id = 16,
                            Description = "Private sauna",
                            Name = "Sauna",
                            propertyId = 7
                        },
                        new
                        {
                            Id = 17,
                            Description = "Private garden area",
                            Name = "Garden",
                            propertyId = 8
                        },
                        new
                        {
                            Id = 18,
                            Description = "Room with games and entertainment",
                            Name = "Game Room",
                            propertyId = 8
                        },
                        new
                        {
                            Id = 19,
                            Description = "24-hour security",
                            Name = "Security",
                            propertyId = 8
                        },
                        new
                        {
                            Id = 20,
                            Description = "Private home theater",
                            Name = "Theater Room",
                            propertyId = 8
                        });
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.AppointmentsAvailable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("AppointmentsAvailable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            From = new DateTime(2024, 6, 28, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6841),
                            IsAvailable = true,
                            PricePerNight = 20m,
                            PropertyId = 1,
                            To = new DateTime(2024, 7, 3, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6890)
                        },
                        new
                        {
                            Id = 2,
                            From = new DateTime(2024, 6, 29, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6901),
                            IsAvailable = true,
                            PricePerNight = 25m,
                            PropertyId = 2,
                            To = new DateTime(2024, 7, 4, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6902)
                        },
                        new
                        {
                            Id = 3,
                            From = new DateTime(2024, 6, 30, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6905),
                            IsAvailable = false,
                            PricePerNight = 30m,
                            PropertyId = 3,
                            To = new DateTime(2024, 7, 5, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6906)
                        },
                        new
                        {
                            Id = 4,
                            From = new DateTime(2024, 7, 1, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6908),
                            IsAvailable = true,
                            PricePerNight = 35m,
                            PropertyId = 4,
                            To = new DateTime(2024, 7, 6, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6909)
                        },
                        new
                        {
                            Id = 5,
                            From = new DateTime(2024, 7, 2, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6911),
                            IsAvailable = true,
                            PricePerNight = 40m,
                            PropertyId = 5,
                            To = new DateTime(2024, 7, 7, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6912)
                        },
                        new
                        {
                            Id = 6,
                            From = new DateTime(2024, 7, 3, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6914),
                            IsAvailable = false,
                            PricePerNight = 45m,
                            PropertyId = 6,
                            To = new DateTime(2024, 7, 8, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6916)
                        },
                        new
                        {
                            Id = 7,
                            From = new DateTime(2024, 7, 4, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6918),
                            IsAvailable = true,
                            PricePerNight = 50m,
                            PropertyId = 7,
                            To = new DateTime(2024, 7, 9, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6919)
                        },
                        new
                        {
                            Id = 8,
                            From = new DateTime(2024, 7, 5, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6921),
                            IsAvailable = true,
                            PricePerNight = 55m,
                            PropertyId = 8,
                            To = new DateTime(2024, 7, 10, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6922)
                        },
                        new
                        {
                            Id = 9,
                            From = new DateTime(2024, 7, 6, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6924),
                            IsAvailable = false,
                            PricePerNight = 60m,
                            PropertyId = 9,
                            To = new DateTime(2024, 7, 11, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6926)
                        },
                        new
                        {
                            Id = 10,
                            From = new DateTime(2024, 7, 7, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6928),
                            IsAvailable = true,
                            PricePerNight = 65m,
                            PropertyId = 10,
                            To = new DateTime(2024, 7, 12, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6929)
                        },
                        new
                        {
                            Id = 11,
                            From = new DateTime(2024, 7, 8, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6931),
                            IsAvailable = true,
                            PricePerNight = 70m,
                            PropertyId = 11,
                            To = new DateTime(2024, 7, 13, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6933)
                        },
                        new
                        {
                            Id = 12,
                            From = new DateTime(2024, 7, 9, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6934),
                            IsAvailable = false,
                            PricePerNight = 75m,
                            PropertyId = 12,
                            To = new DateTime(2024, 7, 14, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6936)
                        },
                        new
                        {
                            Id = 13,
                            From = new DateTime(2024, 7, 10, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6938),
                            IsAvailable = true,
                            PricePerNight = 80m,
                            PropertyId = 13,
                            To = new DateTime(2024, 7, 15, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6939)
                        },
                        new
                        {
                            Id = 14,
                            From = new DateTime(2024, 7, 11, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6941),
                            IsAvailable = true,
                            PricePerNight = 85m,
                            PropertyId = 14,
                            To = new DateTime(2024, 7, 16, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6942)
                        },
                        new
                        {
                            Id = 15,
                            From = new DateTime(2024, 7, 12, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6944),
                            IsAvailable = false,
                            PricePerNight = 90m,
                            PropertyId = 15,
                            To = new DateTime(2024, 7, 17, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6945)
                        },
                        new
                        {
                            Id = 16,
                            From = new DateTime(2024, 7, 13, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6947),
                            IsAvailable = true,
                            PricePerNight = 95m,
                            PropertyId = 16,
                            To = new DateTime(2024, 7, 18, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6948)
                        },
                        new
                        {
                            Id = 17,
                            From = new DateTime(2024, 7, 14, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6950),
                            IsAvailable = true,
                            PricePerNight = 100m,
                            PropertyId = 17,
                            To = new DateTime(2024, 7, 19, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6951)
                        },
                        new
                        {
                            Id = 18,
                            From = new DateTime(2024, 7, 15, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6953),
                            IsAvailable = false,
                            PricePerNight = 105m,
                            PropertyId = 18,
                            To = new DateTime(2024, 7, 20, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6954)
                        },
                        new
                        {
                            Id = 19,
                            From = new DateTime(2024, 7, 16, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6956),
                            IsAvailable = true,
                            PricePerNight = 110m,
                            PropertyId = 19,
                            To = new DateTime(2024, 7, 21, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6958)
                        },
                        new
                        {
                            Id = 20,
                            From = new DateTime(2024, 7, 17, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6959),
                            IsAvailable = true,
                            PricePerNight = 115m,
                            PropertyId = 20,
                            To = new DateTime(2024, 7, 22, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(6961)
                        });
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentIntentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 21,
                            BookingStatus = 0,
                            CheckInDate = new DateTime(2024, 6, 28, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7006),
                            CheckOutDate = new DateTime(2024, 7, 3, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7008),
                            PropertyId = 1,
                            TotalPrice = 100,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 1,
                            BookingStatus = 0,
                            CheckInDate = new DateTime(2024, 6, 28, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7011),
                            CheckOutDate = new DateTime(2024, 7, 3, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7012),
                            PropertyId = 1,
                            TotalPrice = 100,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 2,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 6, 29, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7014),
                            CheckOutDate = new DateTime(2024, 7, 4, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7015),
                            PropertyId = 2,
                            TotalPrice = 150,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 3,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 6, 30, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7018),
                            CheckOutDate = new DateTime(2024, 7, 5, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7019),
                            PropertyId = 3,
                            TotalPrice = 200,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 4,
                            BookingStatus = 0,
                            CheckInDate = new DateTime(2024, 7, 1, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7021),
                            CheckOutDate = new DateTime(2024, 7, 6, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7022),
                            PropertyId = 4,
                            TotalPrice = 250,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 5,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 2, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7024),
                            CheckOutDate = new DateTime(2024, 7, 7, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7025),
                            PropertyId = 5,
                            TotalPrice = 300,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 6,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 3, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7027),
                            CheckOutDate = new DateTime(2024, 7, 8, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7029),
                            PropertyId = 6,
                            TotalPrice = 350,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 7,
                            BookingStatus = 0,
                            CheckInDate = new DateTime(2024, 7, 4, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7031),
                            CheckOutDate = new DateTime(2024, 7, 9, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7032),
                            PropertyId = 7,
                            TotalPrice = 400,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 8,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 5, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7034),
                            CheckOutDate = new DateTime(2024, 7, 10, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7035),
                            PropertyId = 8,
                            TotalPrice = 450,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 9,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 6, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7037),
                            CheckOutDate = new DateTime(2024, 7, 11, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7039),
                            PropertyId = 9,
                            TotalPrice = 500,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 10,
                            BookingStatus = 0,
                            CheckInDate = new DateTime(2024, 7, 7, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7041),
                            CheckOutDate = new DateTime(2024, 7, 12, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7042),
                            PropertyId = 10,
                            TotalPrice = 550,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 11,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 8, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7044),
                            CheckOutDate = new DateTime(2024, 7, 13, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7045),
                            PropertyId = 11,
                            TotalPrice = 600,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 12,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 9, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7047),
                            CheckOutDate = new DateTime(2024, 7, 14, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7048),
                            PropertyId = 12,
                            TotalPrice = 650,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 13,
                            BookingStatus = 0,
                            CheckInDate = new DateTime(2024, 7, 10, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7050),
                            CheckOutDate = new DateTime(2024, 7, 15, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7052),
                            PropertyId = 13,
                            TotalPrice = 700,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 14,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 11, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7054),
                            CheckOutDate = new DateTime(2024, 7, 16, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7055),
                            PropertyId = 14,
                            TotalPrice = 750,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 15,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 12, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7057),
                            CheckOutDate = new DateTime(2024, 7, 17, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7058),
                            PropertyId = 15,
                            TotalPrice = 800,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 16,
                            BookingStatus = 0,
                            CheckInDate = new DateTime(2024, 7, 13, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7060),
                            CheckOutDate = new DateTime(2024, 7, 18, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7061),
                            PropertyId = 16,
                            TotalPrice = 850,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 17,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 14, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7063),
                            CheckOutDate = new DateTime(2024, 7, 19, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7065),
                            PropertyId = 17,
                            TotalPrice = 900,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 18,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 15, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7067),
                            CheckOutDate = new DateTime(2024, 7, 20, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7068),
                            PropertyId = 18,
                            TotalPrice = 950,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 19,
                            BookingStatus = 0,
                            CheckInDate = new DateTime(2024, 7, 16, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7070),
                            CheckOutDate = new DateTime(2024, 7, 21, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7071),
                            PropertyId = 19,
                            TotalPrice = 1000,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 20,
                            BookingStatus = 2,
                            CheckInDate = new DateTime(2024, 7, 17, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7073),
                            CheckOutDate = new DateTime(2024, 7, 22, 18, 49, 49, 790, DateTimeKind.Local).AddTicks(7074),
                            PropertyId = 20,
                            TotalPrice = 1050,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        });
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 21,
                            Description = "Description For Category",
                            IconURL = "https://localhost:7116/Assets/Category/1.jpg",
                            Name = "Apartment"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Guests have the entire home or apartment to themselves",
                            IconURL = "https://localhost:7116/Assets/Category/2.jpg",
                            Name = "Entire Place"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Guests have a private room but share common areas with the host or other guests",
                            IconURL = "https://localhost:7116/Assets/Category/3.jpg",
                            Name = "Private Room"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Guests share a room with the host or other guests",
                            IconURL = "https://localhost:7116/Assets/Category/4.jpg",
                            Name = "Shared Room"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Unusual or unconventional accommodations (treehouses, yurts, etc.)",
                            IconURL = "https://localhost:7116/Assets/Category/5.jpg",
                            Name = "Unique Stays"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Properties with direct access to a beach",
                            IconURL = "https://localhost:7116/Assets/Category/6.jpg",
                            Name = "Beachfront"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Properties with ski-in/ski-out access",
                            IconURL = "https://localhost:7116/Assets/Category/7.jpg",
                            Name = "Ski-in/Ski-out"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Properties that allow pets",
                            IconURL = "https://localhost:7116/Assets/Category/8.jpg",
                            Name = "Pet-Friendly"
                        },
                        new
                        {
                            Id = 8,
                            Description = "High-end properties with premium amenities",
                            IconURL = "https://localhost:7116/Assets/Category/9.jpg",
                            Name = "Luxury"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Rustic cabins for a cozy getaway",
                            IconURL = "https://localhost:7116/Assets/Category/10.jpg",
                            Name = "Cabin"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Modern apartments in urban settings",
                            IconURL = "https://localhost:7116/Assets/Category/11.jpg",
                            Name = "Apartment"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Spacious lofts with open layouts",
                            IconURL = "https://localhost:7116/Assets/Category/12.jpg",
                            Name = "Loft"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Luxurious villas with private pools or jacuzzis",
                            IconURL = "https://localhost:7116/Assets/Category/13.jpg",
                            Name = "Villa"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Historic castles for a unique experience",
                            IconURL = "https://localhost:7116/Assets/Category/14.jpg",
                            Name = "Castle"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Treehouses for a whimsical stay",
                            IconURL = "https://localhost:7116/Assets/Category/15.jpg",
                            Name = "Treehouse"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Houseboats or other boats for a stay on the water",
                            IconURL = "https://localhost:7116/Assets/Category/16.jpg",
                            Name = "Boat"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Unique dome-shaped accommodations",
                            IconURL = "https://localhost:7116/Assets/Category/17.jpg",
                            Name = "Dome"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Small, stylish hotels with personalized service",
                            IconURL = "https://localhost:7116/Assets/Category/18.jpg",
                            Name = "Boutique Hotel"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Properties committed to sustainable practices",
                            IconURL = "https://localhost:7116/Assets/Category/19.jpg",
                            Name = "Eco-Friendly"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Properties with amenities for families with children",
                            IconURL = "https://localhost:7116/Assets/Category/20.jpg",
                            Name = "Family-Friendly"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Properties with features suitable for remote work (fast Wi-Fi, dedicated workspace)",
                            IconURL = "https://localhost:7116/Assets/Category/21.jpg",
                            Name = "Workcation-Friendly"
                        });
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "London"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            Name = "New York City"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 6,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 7,
                            Name = "Rome"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 8,
                            Name = "Madrid"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 9,
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 10,
                            Name = "Seoul"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 1,
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 2,
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 3,
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 4,
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 5,
                            Name = "Dubai"
                        });
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countires");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = 2,
                            Name = "France"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Oman"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Yemen"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Palestine"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Morocco"
                        });
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Beds")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("CheckIn")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("CheckOut")
                        .HasColumnType("time");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayedImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfBedrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuest")
                        .HasColumnType("int");

                    b.Property<bool>("Pets")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TakePhotos")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("UserId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Cairo",
                            Beds = 8,
                            CategoryId = 1,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 1,
                            Description = "No Description",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/1/1 (1).webp",
                            Name = "Apartment",
                            NumberOfBathrooms = 1,
                            NumberOfBedrooms = 4,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Alexandria",
                            Beds = 5,
                            CategoryId = 1,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 2,
                            Description = "Sea view with modern amenities",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/2/1 (1).webp",
                            Name = "Beach House",
                            NumberOfBathrooms = 2,
                            NumberOfBedrooms = 3,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 2,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Aswan",
                            Beds = 3,
                            CategoryId = 2,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 3,
                            Description = "Cozy cabin in the mountains",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/3/1 (1).webp",
                            Name = "Mountain Cabin",
                            NumberOfBathrooms = 1,
                            NumberOfBedrooms = 2,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 4,
                            Adress = "Sharm El-Sheikh",
                            Beds = 10,
                            CategoryId = 3,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 4,
                            Description = "Luxurious villa with a private pool",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/4/1 (1).jpeg",
                            Name = "Luxury Villa",
                            NumberOfBathrooms = 4,
                            NumberOfBedrooms = 5,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 3,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 5,
                            Adress = "Giza",
                            Beds = 4,
                            CategoryId = 4,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 5,
                            Description = "Modern condo in the city center",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/5/1 (1).webp",
                            Name = "Downtown Condo",
                            NumberOfBathrooms = 2,
                            NumberOfBedrooms = 2,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 6,
                            Adress = "Luxor",
                            Beds = 7,
                            CategoryId = 5,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 6,
                            Description = "Spacious farmhouse with a garden",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/6/1 (1).webp",
                            Name = "Farmhouse",
                            NumberOfBathrooms = 3,
                            NumberOfBedrooms = 4,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 2,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 7,
                            Adress = "Cairo",
                            Beds = 6,
                            CategoryId = 6,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 1,
                            Description = "Penthouse with panoramic views",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/7/1 (1).webp",
                            Name = "Penthouse",
                            NumberOfBathrooms = 3,
                            NumberOfBedrooms = 3,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 8,
                            Adress = "Helwan",
                            Beds = 5,
                            CategoryId = 7,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 8,
                            Description = "Family home in a quiet suburb",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/8/1 (1).webp",
                            Name = "Suburban Home",
                            NumberOfBathrooms = 2,
                            NumberOfBedrooms = 3,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 9,
                            Adress = "Alexandria",
                            Beds = 1,
                            CategoryId = 8,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 2,
                            Description = "Compact studio in a bustling area",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/9/1 (1).webp",
                            Name = "Studio Apartment",
                            NumberOfBathrooms = 1,
                            NumberOfBedrooms = 1,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 3,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 10,
                            Adress = "Minya",
                            Beds = 3,
                            CategoryId = 9,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 10,
                            Description = "Charming cottage in the countryside",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/10/1 (1).webp",
                            Name = "Country Cottage",
                            NumberOfBathrooms = 1,
                            NumberOfBedrooms = 2,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 11,
                            Adress = "Fayoum",
                            Beds = 5,
                            CategoryId = 10,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 11,
                            Description = "Peaceful house by the lake",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/11/1 (1).webp",
                            Name = "Lake House",
                            NumberOfBathrooms = 2,
                            NumberOfBedrooms = 3,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 12,
                            Adress = "Cairo",
                            Beds = 2,
                            CategoryId = 1,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 1,
                            Description = "Stylish loft in an urban setting",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/12/1 (1).webp",
                            Name = "Urban Loft",
                            NumberOfBathrooms = 1,
                            NumberOfBedrooms = 2,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 13,
                            Adress = "Suez",
                            Beds = 4,
                            CategoryId = 2,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 13,
                            Description = "Modern townhouse with a garage",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/13/1 (1).webp",
                            Name = "Townhouse",
                            NumberOfBathrooms = 2,
                            NumberOfBedrooms = 3,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 14,
                            Adress = "Alexandria",
                            Beds = 7,
                            CategoryId = 4,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 2,
                            Description = "Home with historical significance",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/14/1 (1).webp",
                            Name = "Historical Home",
                            NumberOfBathrooms = 3,
                            NumberOfBedrooms = 4,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 15,
                            Adress = "Siwa",
                            Beds = 3,
                            CategoryId = 4,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 15,
                            Description = "Retreat in the quiet of the desert",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/15/1 (1).jpeg",
                            Name = "Desert Retreat",
                            NumberOfBathrooms = 1,
                            NumberOfBedrooms = 2,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 2,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 16,
                            Adress = "Dahab",
                            Beds = 4,
                            CategoryId = 5,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 12,
                            Description = "Single-story bungalow with a yard",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/16/1 (1).webp",
                            Name = "Bungalow",
                            NumberOfBathrooms = 1,
                            NumberOfBedrooms = 3,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 17,
                            Adress = "Cairo",
                            Beds = 1,
                            CategoryId = 6,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 1,
                            Description = "Modern flat in a residential complex",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/17/1 (1).webp",
                            Name = "Modern Flat",
                            NumberOfBathrooms = 1,
                            NumberOfBedrooms = 1,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 0,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 18,
                            Adress = "Port Said",
                            Beds = 5,
                            CategoryId = 7,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 12,
                            Description = "Eco-friendly house with solar panels",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/18/1 (1).webp",
                            Name = "Eco-Friendly House",
                            NumberOfBathrooms = 2,
                            NumberOfBedrooms = 3,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 3,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 19,
                            Adress = "Port Said",
                            Beds = 5,
                            CategoryId = 7,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 12,
                            Description = "Eco-friendly house with solar panels",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/19/1 (1).webp",
                            Name = "Eco-Friendly House",
                            NumberOfBathrooms = 2,
                            NumberOfBedrooms = 3,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 3,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        },
                        new
                        {
                            Id = 20,
                            Adress = "Sinai",
                            Beds = 3,
                            CategoryId = 8,
                            CheckIn = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(9)),
                            CheckOut = new TimeOnly(0, 0, 0).Add(TimeSpan.FromTicks(15)),
                            CityId = 14,
                            Description = "Cabin with a rustic charm",
                            DisplayedImage = "https://localhost:7116/Assets/Properties/20/1 (1).webp",
                            Name = "Rustic Cabin",
                            NumberOfBathrooms = 1,
                            NumberOfBedrooms = 2,
                            NumberOfGuest = 10,
                            Pets = true,
                            Status = 2,
                            TakePhotos = false,
                            UserId = "a9f8d4c8-bf56-4291-bb5c-e674abfb8bb9"
                        });
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.PropertyImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://localhost:7116/Assets/Properties/1/1 (1).webp",
                            PropertyId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://localhost:7116/Assets/Properties/1/1 (2).webp",
                            PropertyId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://localhost:7116/Assets/Properties/1/1 (3).webp",
                            PropertyId = 1
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://localhost:7116/Assets/Properties/1/1 (4).webp",
                            PropertyId = 1
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://localhost:7116/Assets/Properties/1/1 (5).webp",
                            PropertyId = 1
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://localhost:7116/Assets/Properties/2/1 (1).webp",
                            PropertyId = 2
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://localhost:7116/Assets/Properties/2/1 (2).webp",
                            PropertyId = 2
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://localhost:7116/Assets/Properties/2/1 (3).webp",
                            PropertyId = 2
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "https://localhost:7116/Assets/Properties/2/1 (4).webp",
                            PropertyId = 2
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "https://localhost:7116/Assets/Properties/2/1 (5).webp",
                            PropertyId = 2
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "https://localhost:7116/Assets/Properties/3/1 (1).webp",
                            PropertyId = 3
                        },
                        new
                        {
                            Id = 12,
                            ImageUrl = "https://localhost:7116/Assets/Properties/3/1 (2).webp",
                            PropertyId = 3
                        },
                        new
                        {
                            Id = 13,
                            ImageUrl = "https://localhost:7116/Assets/Properties/3/1 (3).webp",
                            PropertyId = 3
                        },
                        new
                        {
                            Id = 14,
                            ImageUrl = "https://localhost:7116/Assets/Properties/3/1 (4).webp",
                            PropertyId = 3
                        },
                        new
                        {
                            Id = 15,
                            ImageUrl = "https://localhost:7116/Assets/Properties/3/1 (5).webp",
                            PropertyId = 3
                        },
                        new
                        {
                            Id = 16,
                            ImageUrl = "https://localhost:7116/Assets/Properties/4/1 (1).jpeg",
                            PropertyId = 4
                        },
                        new
                        {
                            Id = 17,
                            ImageUrl = "https://localhost:7116/Assets/Properties/4/1 (1).webp",
                            PropertyId = 4
                        },
                        new
                        {
                            Id = 18,
                            ImageUrl = "https://localhost:7116/Assets/Properties/4/1 (2).webp",
                            PropertyId = 4
                        },
                        new
                        {
                            Id = 19,
                            ImageUrl = "https://localhost:7116/Assets/Properties/4/1 (3).webp",
                            PropertyId = 4
                        },
                        new
                        {
                            Id = 20,
                            ImageUrl = "https://localhost:7116/Assets/Properties/4/1 (4).webp",
                            PropertyId = 4
                        },
                        new
                        {
                            Id = 21,
                            ImageUrl = "https://localhost:7116/Assets/Properties/5/1.jpeg",
                            PropertyId = 5
                        },
                        new
                        {
                            Id = 22,
                            ImageUrl = "https://localhost:7116/Assets/Properties/5/2.webp",
                            PropertyId = 5
                        },
                        new
                        {
                            Id = 23,
                            ImageUrl = "https://localhost:7116/Assets/Properties/5/3.jpeg",
                            PropertyId = 5
                        },
                        new
                        {
                            Id = 24,
                            ImageUrl = "https://localhost:7116/Assets/Properties/5/4.webp",
                            PropertyId = 5
                        },
                        new
                        {
                            Id = 25,
                            ImageUrl = "https://localhost:7116/Assets/Properties/5/5.webp",
                            PropertyId = 5
                        },
                        new
                        {
                            Id = 26,
                            ImageUrl = "https://localhost:7116/Assets/Properties/6/1 (1).webp",
                            PropertyId = 6
                        },
                        new
                        {
                            Id = 27,
                            ImageUrl = "https://localhost:7116/Assets/Properties/6/1 (2).webp",
                            PropertyId = 6
                        },
                        new
                        {
                            Id = 28,
                            ImageUrl = "https://localhost:7116/Assets/Properties/6/1 (3).webp",
                            PropertyId = 6
                        },
                        new
                        {
                            Id = 29,
                            ImageUrl = "https://localhost:7116/Assets/Properties/6/1 (4).webp",
                            PropertyId = 6
                        },
                        new
                        {
                            Id = 30,
                            ImageUrl = "https://localhost:7116/Assets/Properties/6/1 (5).webp",
                            PropertyId = 6
                        },
                        new
                        {
                            Id = 31,
                            ImageUrl = "https://localhost:7116/Assets/Properties/7/1 (1).webp",
                            PropertyId = 7
                        },
                        new
                        {
                            Id = 32,
                            ImageUrl = "https://localhost:7116/Assets/Properties/7/1 (2).webp",
                            PropertyId = 7
                        },
                        new
                        {
                            Id = 33,
                            ImageUrl = "https://localhost:7116/Assets/Properties/7/1 (3).webp",
                            PropertyId = 7
                        },
                        new
                        {
                            Id = 34,
                            ImageUrl = "https://localhost:7116/Assets/Properties/7/1 (4).webp",
                            PropertyId = 7
                        },
                        new
                        {
                            Id = 35,
                            ImageUrl = "https://localhost:7116/Assets/Properties/7/1 (5).webp",
                            PropertyId = 7
                        },
                        new
                        {
                            Id = 36,
                            ImageUrl = "https://localhost:7116/Assets/Properties/8/1 (1).webp",
                            PropertyId = 8
                        },
                        new
                        {
                            Id = 37,
                            ImageUrl = "https://localhost:7116/Assets/Properties/8/1 (2).webp",
                            PropertyId = 8
                        },
                        new
                        {
                            Id = 38,
                            ImageUrl = "https://localhost:7116/Assets/Properties/8/1 (3).webp",
                            PropertyId = 8
                        },
                        new
                        {
                            Id = 39,
                            ImageUrl = "https://localhost:7116/Assets/Properties/8/1 (4).webp",
                            PropertyId = 8
                        },
                        new
                        {
                            Id = 40,
                            ImageUrl = "https://localhost:7116/Assets/Properties/8/1 (5).webp",
                            PropertyId = 8
                        },
                        new
                        {
                            Id = 41,
                            ImageUrl = "https://localhost:7116/Assets/Properties/9/1 (1).webp",
                            PropertyId = 9
                        },
                        new
                        {
                            Id = 42,
                            ImageUrl = "https://localhost:7116/Assets/Properties/9/1 (2).webp",
                            PropertyId = 9
                        },
                        new
                        {
                            Id = 43,
                            ImageUrl = "https://localhost:7116/Assets/Properties/9/1 (3).webp",
                            PropertyId = 9
                        },
                        new
                        {
                            Id = 44,
                            ImageUrl = "https://localhost:7116/Assets/Properties/9/1 (4).webp",
                            PropertyId = 9
                        },
                        new
                        {
                            Id = 45,
                            ImageUrl = "https://localhost:7116/Assets/Properties/9/1 (5).webp",
                            PropertyId = 9
                        },
                        new
                        {
                            Id = 46,
                            ImageUrl = "https://localhost:7116/Assets/Properties/10/1 (1).webp",
                            PropertyId = 10
                        },
                        new
                        {
                            Id = 47,
                            ImageUrl = "https://localhost:7116/Assets/Properties/10/1 (2).webp",
                            PropertyId = 10
                        },
                        new
                        {
                            Id = 48,
                            ImageUrl = "https://localhost:7116/Assets/Properties/10/1 (3).webp",
                            PropertyId = 10
                        },
                        new
                        {
                            Id = 49,
                            ImageUrl = "https://localhost:7116/Assets/Properties/10/1 (4).webp",
                            PropertyId = 10
                        },
                        new
                        {
                            Id = 50,
                            ImageUrl = "https://localhost:7116/Assets/Properties/10/1 (5).webp",
                            PropertyId = 10
                        },
                        new
                        {
                            Id = 51,
                            ImageUrl = "https://localhost:7116/Assets/Properties/11/1 (1).webp",
                            PropertyId = 11
                        },
                        new
                        {
                            Id = 52,
                            ImageUrl = "https://localhost:7116/Assets/Properties/11/1 (2).webp",
                            PropertyId = 11
                        },
                        new
                        {
                            Id = 53,
                            ImageUrl = "https://localhost:7116/Assets/Properties/11/1 (3).webp",
                            PropertyId = 11
                        },
                        new
                        {
                            Id = 54,
                            ImageUrl = "https://localhost:7116/Assets/Properties/11/1 (4).webp",
                            PropertyId = 11
                        },
                        new
                        {
                            Id = 55,
                            ImageUrl = "https://localhost:7116/Assets/Properties/11/1 (5).webp",
                            PropertyId = 11
                        },
                        new
                        {
                            Id = 56,
                            ImageUrl = "https://localhost:7116/Assets/Properties/12/1 (1).webp",
                            PropertyId = 12
                        },
                        new
                        {
                            Id = 57,
                            ImageUrl = "https://localhost:7116/Assets/Properties/12/1 (2).webp",
                            PropertyId = 12
                        },
                        new
                        {
                            Id = 58,
                            ImageUrl = "https://localhost:7116/Assets/Properties/12/1 (3).webp",
                            PropertyId = 12
                        },
                        new
                        {
                            Id = 59,
                            ImageUrl = "https://localhost:7116/Assets/Properties/12/1 (4).webp",
                            PropertyId = 12
                        },
                        new
                        {
                            Id = 60,
                            ImageUrl = "https://localhost:7116/Assets/Properties/12/1 (5).webp",
                            PropertyId = 12
                        },
                        new
                        {
                            Id = 61,
                            ImageUrl = "https://localhost:7116/Assets/Properties/13/1 (1).webp",
                            PropertyId = 13
                        },
                        new
                        {
                            Id = 62,
                            ImageUrl = "https://localhost:7116/Assets/Properties/13/1 (2).webp",
                            PropertyId = 13
                        },
                        new
                        {
                            Id = 63,
                            ImageUrl = "https://localhost:7116/Assets/Properties/13/1 (3).webp",
                            PropertyId = 13
                        },
                        new
                        {
                            Id = 64,
                            ImageUrl = "https://localhost:7116/Assets/Properties/13/1 (4).webp",
                            PropertyId = 13
                        },
                        new
                        {
                            Id = 65,
                            ImageUrl = "https://localhost:7116/Assets/Properties/13/1 (5).webp",
                            PropertyId = 13
                        },
                        new
                        {
                            Id = 66,
                            ImageUrl = "https://localhost:7116/Assets/Properties/14/1 (1).webp",
                            PropertyId = 14
                        },
                        new
                        {
                            Id = 67,
                            ImageUrl = "https://localhost:7116/Assets/Properties/14/1 (2).webp",
                            PropertyId = 14
                        },
                        new
                        {
                            Id = 68,
                            ImageUrl = "https://localhost:7116/Assets/Properties/14/1 (3).webp",
                            PropertyId = 14
                        },
                        new
                        {
                            Id = 69,
                            ImageUrl = "https://localhost:7116/Assets/Properties/14/1 (4).webp",
                            PropertyId = 14
                        },
                        new
                        {
                            Id = 70,
                            ImageUrl = "https://localhost:7116/Assets/Properties/14/1 (5).webp",
                            PropertyId = 14
                        },
                        new
                        {
                            Id = 71,
                            ImageUrl = "https://localhost:7116/Assets/Properties/15/1 (1).webp",
                            PropertyId = 15
                        },
                        new
                        {
                            Id = 72,
                            ImageUrl = "https://localhost:7116/Assets/Properties/15/1 (2).webp",
                            PropertyId = 15
                        },
                        new
                        {
                            Id = 73,
                            ImageUrl = "https://localhost:7116/Assets/Properties/15/1 (3).webp",
                            PropertyId = 15
                        },
                        new
                        {
                            Id = 74,
                            ImageUrl = "https://localhost:7116/Assets/Properties/15/1 (4).webp",
                            PropertyId = 15
                        },
                        new
                        {
                            Id = 75,
                            ImageUrl = "https://localhost:7116/Assets/Properties/15/1 (5).webp",
                            PropertyId = 15
                        },
                        new
                        {
                            Id = 76,
                            ImageUrl = "https://localhost:7116/Assets/Properties/16/1 (1).webp",
                            PropertyId = 16
                        },
                        new
                        {
                            Id = 77,
                            ImageUrl = "https://localhost:7116/Assets/Properties/16/1 (2).webp",
                            PropertyId = 16
                        },
                        new
                        {
                            Id = 78,
                            ImageUrl = "https://localhost:7116/Assets/Properties/16/1 (3).webp",
                            PropertyId = 16
                        },
                        new
                        {
                            Id = 79,
                            ImageUrl = "https://localhost:7116/Assets/Properties/16/1 (4).webp",
                            PropertyId = 16
                        },
                        new
                        {
                            Id = 80,
                            ImageUrl = "https://localhost:7116/Assets/Properties/16/1 (5).webp",
                            PropertyId = 16
                        },
                        new
                        {
                            Id = 81,
                            ImageUrl = "https://localhost:7116/Assets/Properties/17/1 (1).webp",
                            PropertyId = 17
                        },
                        new
                        {
                            Id = 82,
                            ImageUrl = "https://localhost:7116/Assets/Properties/17/1 (2).webp",
                            PropertyId = 17
                        },
                        new
                        {
                            Id = 83,
                            ImageUrl = "https://localhost:7116/Assets/Properties/17/1 (3).webp",
                            PropertyId = 17
                        },
                        new
                        {
                            Id = 84,
                            ImageUrl = "https://localhost:7116/Assets/Properties/17/1 (4).webp",
                            PropertyId = 17
                        },
                        new
                        {
                            Id = 85,
                            ImageUrl = "https://localhost:7116/Assets/Properties/17/1 (5).webp",
                            PropertyId = 17
                        },
                        new
                        {
                            Id = 86,
                            ImageUrl = "https://localhost:7116/Assets/Properties/18/1 (1).webp",
                            PropertyId = 18
                        },
                        new
                        {
                            Id = 87,
                            ImageUrl = "https://localhost:7116/Assets/Properties/18/1 (2).webp",
                            PropertyId = 18
                        },
                        new
                        {
                            Id = 88,
                            ImageUrl = "https://localhost:7116/Assets/Properties/18/1 (3).webp",
                            PropertyId = 18
                        },
                        new
                        {
                            Id = 89,
                            ImageUrl = "https://localhost:7116/Assets/Properties/18/1 (4).webp",
                            PropertyId = 18
                        },
                        new
                        {
                            Id = 90,
                            ImageUrl = "https://localhost:7116/Assets/Properties/18/1 (5).webp",
                            PropertyId = 18
                        },
                        new
                        {
                            Id = 91,
                            ImageUrl = "https://localhost:7116/Assets/Properties/19/1 (1).webp",
                            PropertyId = 19
                        },
                        new
                        {
                            Id = 92,
                            ImageUrl = "https://localhost:7116/Assets/Properties/19/1 (2).webp",
                            PropertyId = 19
                        },
                        new
                        {
                            Id = 93,
                            ImageUrl = "https://localhost:7116/Assets/Properties/19/1 (3).webp",
                            PropertyId = 19
                        },
                        new
                        {
                            Id = 94,
                            ImageUrl = "https://localhost:7116/Assets/Properties/19/1 (4).webp",
                            PropertyId = 19
                        },
                        new
                        {
                            Id = 95,
                            ImageUrl = "https://localhost:7116/Assets/Properties/19/1 (5).webp",
                            PropertyId = 19
                        },
                        new
                        {
                            Id = 96,
                            ImageUrl = "https://localhost:7116/Assets/Properties/20/1 (1).webp",
                            PropertyId = 20
                        },
                        new
                        {
                            Id = 97,
                            ImageUrl = "https://localhost:7116/Assets/Properties/20/1 (2).webp",
                            PropertyId = 20
                        },
                        new
                        {
                            Id = 98,
                            ImageUrl = "https://localhost:7116/Assets/Properties/20/1 (3).webp",
                            PropertyId = 20
                        },
                        new
                        {
                            Id = 99,
                            ImageUrl = "https://localhost:7116/Assets/Properties/20/1 (4).webp",
                            PropertyId = 20
                        },
                        new
                        {
                            Id = 100,
                            ImageUrl = "https://localhost:7116/Assets/Properties/20/1 (5).webp",
                            PropertyId = 20
                        });
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            Comment = "Good Comment",
                            Rating = 5,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 2,
                            BookingId = 2,
                            Comment = "Nice place",
                            Rating = 4,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 3,
                            BookingId = 3,
                            Comment = "Average experience",
                            Rating = 3,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 4,
                            BookingId = 4,
                            Comment = "Not as expected",
                            Rating = 2,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 5,
                            BookingId = 5,
                            Comment = "Excellent service",
                            Rating = 5,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 6,
                            BookingId = 6,
                            Comment = "Good value for money",
                            Rating = 4,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 7,
                            BookingId = 7,
                            Comment = "Decent stay",
                            Rating = 3,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 8,
                            BookingId = 8,
                            Comment = "Terrible experience",
                            Rating = 1,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 9,
                            BookingId = 9,
                            Comment = "Highly recommend",
                            Rating = 5,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 10,
                            BookingId = 10,
                            Comment = "Very comfortable",
                            Rating = 4,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 11,
                            BookingId = 11,
                            Comment = "Could be better",
                            Rating = 2,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 12,
                            BookingId = 12,
                            Comment = "Loved the place",
                            Rating = 5,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 13,
                            BookingId = 13,
                            Comment = "It was okay",
                            Rating = 3,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 14,
                            BookingId = 14,
                            Comment = "Pretty good",
                            Rating = 4,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 15,
                            BookingId = 15,
                            Comment = "Needs improvement",
                            Rating = 2,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 16,
                            BookingId = 16,
                            Comment = "Fantastic stay",
                            Rating = 5,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 17,
                            BookingId = 17,
                            Comment = "Very disappointing",
                            Rating = 1,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 18,
                            BookingId = 18,
                            Comment = "Good location",
                            Rating = 4,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 19,
                            BookingId = 19,
                            Comment = "Not bad",
                            Rating = 3,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        },
                        new
                        {
                            Id = 20,
                            BookingId = 20,
                            Comment = "Amazing experience",
                            Rating = 5,
                            UserId = "9fc61a74-9ae4-482f-a7b8-8c70538f7418"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Amenity", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.Property", null)
                        .WithMany("Amenity")
                        .HasForeignKey("propertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.AppointmentsAvailable", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.Property", "Property")
                        .WithMany("AppointmentsAvailable")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Booking", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.Property", "Property")
                        .WithMany("PropertyBokking")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirBnb.DAL.Data.Model.AppUser", "User")
                        .WithMany("UserBooking")
                        .HasForeignKey("UserId");

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.City", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Property", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.Category", "Category")
                        .WithMany("Properties")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirBnb.DAL.Data.Model.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirBnb.DAL.Data.Model.AppUser", "User")
                        .WithMany("UserProperties")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("City");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.PropertyImage", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.Property", "Property")
                        .WithMany("PropertyImages")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Review", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.Booking", "Booking")
                        .WithMany("Reviews")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirBnb.DAL.Data.Model.AppUser", "UserReview")
                        .WithMany("UserReviews")
                        .HasForeignKey("UserId");

                    b.Navigation("Booking");

                    b.Navigation("UserReview");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirBnb.DAL.Data.Model.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AirBnb.DAL.Data.Model.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.AppUser", b =>
                {
                    b.Navigation("UserBooking");

                    b.Navigation("UserProperties");

                    b.Navigation("UserReviews");
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Booking", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Category", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("AirBnb.DAL.Data.Model.Property", b =>
                {
                    b.Navigation("Amenity");

                    b.Navigation("AppointmentsAvailable");

                    b.Navigation("PropertyBokking");

                    b.Navigation("PropertyImages");
                });
#pragma warning restore 612, 618
        }
    }
}
